import React from "react";
import s from "./MainPage.module.css";
export const MainPage = () => {
  return (
    <div className={s.container}>
      <h1>Main Page</h1>;
      <p>
        Метод map() похож на метод forEach, он также в качестве параметра
        принимает функцию, с помощью которой выполняются операции над
        перебираемыми элементами массива, но при этом метод map() возвращает
        новый массив с результатами операций над элементами массива. Например,
        применим метод map к вычислению квадратов чисел массива: 1 2 3 4 const
        numbers = [ 1, 2, 3, 4, 5, 6]; const squares = numbers.map(n => n * n);
        console.log(squares); // [1, 4, 9, 16, 25, 36] Функция, которая
        передается в метод map() получает текущий перебираемый элемент,
        выполняет над ним операции и возвращает некоторое значение. Это значение
        затем попадает в результирующий массив squares Поиск в массиве Метод
        find() возвращает первый элемент массива, который соответствует
        некоторому условию. В качестве параметр метод find принимает функцию
        условия: 1 2 3 4 5 const numbers = [1, 2, 3, 5, 8, 13, 21, 34]; //
        получаем первый элемент, который больше 10 let found = numbers.find(n =>
        n > 10 ); console.log(found); // 13 В данном случае получаем первый
        элемент, который больше 10. Если элемент, соответствующий условию, не
        найден, то возвращается undefined. Метод findIndex также принимает
        функцию условия, только возвращает индекс первого элемента массива,
        который соответствует этому условию: 1 2 3 4 5 const numbers = [1, 2, 3,
        5, 8, 13, 21, 34]; // получаем индекс первого элемента, который больше
        10 let foundIndex = numbers.findIndex(n => n > 10 );
        console.log(foundIndex); // 5 Если элемент не найден, то возвращается
        число -1.
      </p>
    </div>
  );
};
